const getDatabase = require('./config/database');

async function testStats() {
    try {
        const db = getDatabase();
        
        console.log('üîç Testando conex√£o com o banco de dados...');
        
        // Verificar tabelas existentes
        const tables = await db.all("SELECT name FROM sqlite_master WHERE type='table'");
        console.log('üìã Tabelas encontradas:', tables.map(t => t.name));
        
        // Verificar se a tabela prayer_requests existe
        const prayerTable = tables.find(t => t.name === 'prayer_requests');
        if (!prayerTable) {
            console.log('‚ùå Tabela prayer_requests n√£o encontrada!');
            return;
        }
        
        // Verificar estrutura da tabela prayer_requests
        const columns = await db.all("PRAGMA table_info(prayer_requests)");
        console.log('üìä Colunas da tabela prayer_requests:');
        columns.forEach(col => {
            console.log(`  - ${col.name} (${col.type})`);
        });
        
        // Verificar dados na tabela
        const totalRequests = await db.get('SELECT COUNT(*) as count FROM prayer_requests');
        console.log(`\nüìà Total de pedidos de ora√ß√£o: ${totalRequests.count}`);
        
        if (totalRequests.count > 0) {
            // Verificar status √∫nicos
            const statuses = await db.all('SELECT DISTINCT status FROM prayer_requests');
            console.log('üè∑Ô∏è  Status encontrados:', statuses.map(s => s.status));
            
            // Contar por status
            const statusCounts = await db.all(`
                SELECT status, COUNT(*) as count 
                FROM prayer_requests 
                GROUP BY status
            `);
            console.log('\nüìä Contagem por status:');
            statusCounts.forEach(s => {
                console.log(`  - ${s.status}: ${s.count}`);
            });
            
            // Testar as consultas espec√≠ficas da API
            console.log('\nüß™ Testando consultas da API:');
            
            const activeCount = await db.get('SELECT COUNT(*) as count FROM prayer_requests WHERE status = "ativo"');
            console.log(`  - Aguardando Ora√ß√£o: ${activeCount.count}`);
            
            const prayingCount = await db.get('SELECT COUNT(*) as count FROM prayer_requests WHERE status = "em_oracao"');
            console.log(`  - Em ora√ß√£o: ${prayingCount.count}`);
            
            const answeredCount = await db.get('SELECT COUNT(*) as count FROM prayer_requests WHERE status = "respondido"');
            console.log(`  - Respondidos: ${answeredCount.count}`);
            
            const cancelledCount = await db.get('SELECT COUNT(*) as count FROM prayer_requests WHERE status = "cancelado"');
            console.log(`  - Cancelados: ${cancelledCount.count}`);
        } else {
            console.log('‚ö†Ô∏è  Nenhum pedido de ora√ß√£o encontrado na tabela.');
        }
        
        console.log('\n‚úÖ Teste conclu√≠do com sucesso!');
        
    } catch (error) {
        console.error('‚ùå Erro ao testar estat√≠sticas:', error);
    }
}

testStats();